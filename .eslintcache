[{"E:\\WEB\\After 13-12-2020\\project\\src\\index.js":"1","E:\\WEB\\After 13-12-2020\\project\\src\\App.js":"2","E:\\WEB\\After 13-12-2020\\project\\src\\component\\login\\index.js":"3","E:\\WEB\\After 13-12-2020\\project\\src\\component\\FirstNavBar\\index.js":"4","E:\\WEB\\After 13-12-2020\\project\\src\\component\\SecondNavBar\\index.js":"5","E:\\WEB\\After 13-12-2020\\project\\src\\component\\ThirdNavBar\\index.js":"6","E:\\WEB\\After 13-12-2020\\project\\src\\MainPage\\index.js":"7","E:\\WEB\\After 13-12-2020\\project\\src\\component\\MessageBox\\messageBox.js":"8","E:\\WEB\\After 13-12-2020\\project\\src\\component\\ProfileNavBar\\index.js":"9"},{"size":197,"mtime":1612182285020,"results":"10","hashOfConfig":"11"},{"size":526,"mtime":1612630673182,"results":"12","hashOfConfig":"11"},{"size":6309,"mtime":1612447372634,"results":"13","hashOfConfig":"11"},{"size":1928,"mtime":1612630638138,"results":"14","hashOfConfig":"11"},{"size":2311,"mtime":1612622405427,"results":"15","hashOfConfig":"11"},{"size":2834,"mtime":1612627561220,"results":"16","hashOfConfig":"11"},{"size":441,"mtime":1612631619894,"results":"17","hashOfConfig":"11"},{"size":1006,"mtime":1612603846087,"results":"18","hashOfConfig":"11"},{"size":4249,"mtime":1612627477434,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1x2zplt",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"22"},"E:\\WEB\\After 13-12-2020\\project\\src\\index.js",[],["41","42"],"E:\\WEB\\After 13-12-2020\\project\\src\\App.js",[],"E:\\WEB\\After 13-12-2020\\project\\src\\component\\login\\index.js",[],"E:\\WEB\\After 13-12-2020\\project\\src\\component\\FirstNavBar\\index.js",[],"E:\\WEB\\After 13-12-2020\\project\\src\\component\\SecondNavBar\\index.js",[],"E:\\WEB\\After 13-12-2020\\project\\src\\component\\ThirdNavBar\\index.js",[],"E:\\WEB\\After 13-12-2020\\project\\src\\MainPage\\index.js",["43"],"E:\\WEB\\After 13-12-2020\\project\\src\\component\\MessageBox\\messageBox.js",["44"],"import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Card, CardContent, Typography, makeStyles } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  statsItem: {\r\n    alignItems: \"center\",\r\n    display: \"flex\",\r\n  },\r\n  statsIcon: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  cardSize: {\r\n    display: \"inline-block\",\r\n  },\r\n}));\r\n\r\nconst ProductCard = ({ className, product, ...rest }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Card className={(classes.root, classes.cardSize)} {...rest}>\r\n      <CardContent>\r\n        <img\r\n          src=\"/image/chatAvtar/4.jpg\"\r\n          alt=\"image\"\r\n          width=\"300\"\r\n          height=\"300\"\r\n        />\r\n        <Typography>vishalsingh</Typography>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nProductCard.propTypes = {\r\n  className: PropTypes.string,\r\n  product: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default ProductCard;\r\n","E:\\WEB\\After 13-12-2020\\project\\src\\component\\ProfileNavBar\\index.js",["45"],"import React from \"react\";\r\nimport {\r\n  Box,\r\n  Typography,\r\n  Divider,\r\n  Button,\r\n  ListItem,\r\n  ListItemText,\r\n  ListItemSecondaryAction,\r\n  List,\r\n  Drawer,\r\n  makeStyles,\r\n  Badge,\r\n  IconButton,\r\n  Menu,\r\n  MenuItem,\r\n} from \"@material-ui/core\";\r\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\r\nimport MailOutlineIcon from \"@material-ui/icons/MailOutline\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\n\r\nconst drawerWidth = 250;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n  },\r\n  drawer: {\r\n    width: drawerWidth,\r\n    flexShrink: 0,\r\n  },\r\n  drawerPaperMobile: {\r\n    width: drawerWidth,\r\n    marginLeft: 60,\r\n  },\r\n}));\r\nconst items = [\r\n  {\r\n    first: \"Nickname:\",\r\n    second: \"Triple T\",\r\n  },\r\n  {\r\n    first: \"Tel:\",\r\n    second: \"0645855966\",\r\n  },\r\n  {\r\n    first: \"Date of Birth:\",\r\n    second: \"May 25th 1999\",\r\n  },\r\n  {\r\n    first: \"Gender:\",\r\n    second: \"Male\",\r\n  },\r\n  {\r\n    first: \"Language\",\r\n    second: \"English\",\r\n  },\r\n];\r\nconst options = [\"View\", \"Edit\", \"Selection\", \"View\", \"Help\"];\r\n\r\nconst ITEM_HEIGHT = 48;\r\nexport default function ProfileNavBar() {\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState(null);\r\n  const open = Boolean(anchorEl);\r\n  const handleClick = (event) => {\r\n    setAnchorEl(event.currentTarget);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setAnchorEl(null);\r\n  };\r\n\r\n  const content = (\r\n    <Box ml=\"10px\" mt=\"20px\">\r\n      <Box mb=\"20px\" display=\"flex\">\r\n        <Badge\r\n          color=\"primary\"\r\n          variant=\"dot\"\r\n          anchorOrigin={{\r\n            vertical: \"top\",\r\n            horizontal: \"left\",\r\n          }}\r\n        >\r\n          <NotificationsIcon />\r\n        </Badge>\r\n        <Box align=\"left\" ml=\"100px\">\r\n          <Button variant=\"outlined\">Default</Button>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Divider />\r\n      <Box mt=\"10px\" mb=\"10px\" display=\"flex\">\r\n        <Box mt=\"10px\" ml=\"10px\">\r\n          <MailOutlineIcon />\r\n        </Box>\r\n\r\n        <Box ml=\"150px\">\r\n          <IconButton\r\n            aria-label=\"more\"\r\n            aria-controls=\"long-menu\"\r\n            aria-haspopup=\"true\"\r\n            onClick={handleClick}\r\n          >\r\n            <MoreVertIcon />\r\n          </IconButton>\r\n          <Menu\r\n            id=\"long-menu\"\r\n            anchorEl={anchorEl}\r\n            keepMounted\r\n            open={open}\r\n            onClose={handleClose}\r\n            PaperProps={{\r\n              style: {\r\n                maxHeight: ITEM_HEIGHT * 4.5,\r\n                width: \"20ch\",\r\n              },\r\n            }}\r\n          >\r\n            {options.map((option) => (\r\n              <MenuItem\r\n                key={option}\r\n                selected={option === \"Pyxis\"}\r\n                onClick={handleClose}\r\n              >\r\n                {option}\r\n              </MenuItem>\r\n            ))}\r\n          </Menu>\r\n        </Box>\r\n      </Box>\r\n      <Box align=\"center\">\r\n        <img\r\n          src={\"/image/chatAvtar/2.jpg\"}\r\n          alt=\"image\"\r\n          width=\"150\"\r\n          height=\"150\"\r\n        />\r\n        <Typography variant=\"h5\" gutterBottom>\r\n          Justin Engle\r\n        </Typography>\r\n        <Typography variant=\"caption\" display=\"block\" gutterBottom>\r\n          Cape Town, RSA\r\n        </Typography>\r\n        <Box mt=\"20px\" mb=\"20px\"></Box>\r\n        <Divider />\r\n      </Box>\r\n      <List>\r\n        {items.map((item) => (\r\n          <ListItem>\r\n            <ListItemText button>\r\n              <Typography variant=\"subtitle1\" gutterBottom>\r\n                {item.first}\r\n              </Typography>\r\n            </ListItemText>\r\n            <ListItemSecondaryAction>\r\n              <Typography button variant=\"caption\" display=\"block\" gutterBottom>\r\n                {item.second}\r\n              </Typography>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n    </Box>\r\n  );\r\n  return (\r\n    <div className={classes.root}>\r\n      <Drawer\r\n        className={classes.drawer}\r\n        variant=\"persistent\"\r\n        anchor=\"right\"\r\n        open\r\n        classes={{\r\n          paper: classes.drawerPaperMobile,\r\n        }}\r\n      >\r\n        {content}\r\n      </Drawer>\r\n    </div>\r\n  );\r\n}\r\n",{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","severity":1,"message":"51","line":4,"column":8,"nodeType":"52","messageId":"53","endLine":4,"endColumn":19},{"ruleId":"54","severity":1,"message":"55","line":28,"column":9,"nodeType":"56","endLine":33,"endColumn":11},{"ruleId":"54","severity":1,"message":"55","line":133,"column":9,"nodeType":"56","endLine":138,"endColumn":11},"no-native-reassign",["57"],"no-negated-in-lhs",["58"],"no-unused-vars","'ProductCard' is defined but never used.","Identifier","unusedVar","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You donâ€™t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]